[2021, May 1] - Chat Push Notifications

=> What do we want to implement?

-   Push notification on new messages when the user is not active. 
    A user is not active if the user is not currently viewing the page.
-   Email notification when the user still hasn't logged in to see the messages after 1 day. 
    The user doesn't have to open the message, they just have to log in to know they have unread messages.

=> Implementing Push Notification

-   Create a dialog asking for permission
-   A settings page to request for permission to show notifications if not setup yet, or to turn it off
-   Setup a service worker on the browser and make a push notification subscription if the user's browser supports it
-   Setup a model to persist the client push notification subscriptions, and map it to the user
-   Implement a way to know when the user is active or not
-   Send the browser push notifications of the count of unseen messages and the chat rooms count the messages are from. 
    For example, "5 messages from 3 chats"
-   Unsubscribe to push notifications if the user is logged out, 
    or if permission is revoked through the browser or the user decides to mute notifications

=> Dialogs and permission phase

The dialog is to let the user know we need permission to show notifications in the browser, 
and should we ask the permission. Also, to let them know of the settings page where they can request permission again.

-   Use the Notifications permission API to check permission state, 
    and to continue to the next step if it's not setup yet.
-   Set hasUserSeenNotificationRequestDialog to false if it does not exist ( in local storage )
-   If hasUserSeenNotificationRequestDialog is false, show dialog and set the variable to true
-   The dialog should contain text describing the request, a close button, and a continue button
-   If the user cancels, do nothing
-   If the user decides to continue, use The Notification API to request permission
-   If the user accepts, register the service worker if not registered
-   Setup push notification subscription

=> Settings page

A settings page to update the user details ( cause why not? ), 
and also to request permission to show notifications if the user did not set it up already.

-   A tabbed view, one tab for updating user details, and another titled Notifications. 
    There, we'd describe what notifications we send, and if the user hasn't setup notifications yet, 
    show a button to request permission, and if they have, 
    indicate that notifications is setup for that device/browser
-   Use the Notifications permission API to check permission state, and to request permission
-   Allow the user to turn off notifications, and set muteNotifications to true in local storage, 
    also unsubscribe from push notifications
-   If the user unmutes notifications, set muteNotifications to true, and subscribe to push notifications

=> Service worker and push notification events

-   When an event comes in, check if we have permission to show events, 
    muteNotifications is not true, and the user is logged in, if all is true, show the notification. 
    If not, unsubscribe the client from push notifications

=> Knowing when the user is not active

Currently, when a user logs in, a websocket connection is maintained until the user logs out or leaves the page. 
The websocket connection is disconnected from the server after 5 minutes if the user does not return 
( this was done to allow for time, in case the user just wants to check something and come back to the page ).

I'm thinking websocket connections should update the server when the user leaves the tab. 
When broadcasting chat-related changes, check if all the connected sockets are "out-of-tab", 
and if so, then send a push notification.

=> Other webapp changes

-   Unsubscribe to push notifications if the user is logged out
-   A system for persisting user-device configurations

=> Scribblings

- Browser notifications should be shown in 2 ways. First is when the user is logged in, 
  but not viewing the chat room. A notification should show the name of the person or the room, 
  and the message. If the user is currently not active, then we'd show a browser-level notification.
- Run cron jobs to remove tokens and clients not used after 2 months
- Log token and client uses


- what are we building
- what are the challenges
- how are we building

- enable chat notifications
- chat notifications are now enabled, you can change your preferences in the settings page

- user and sessions
- user-to-client settings
- push subscription

- User session ( user, token, and client )
  - from the incoming token data
  - be able to get user data
  - be able to get client data or create one
  - be able to get token or create one and link to client

- population & reconciliation
  - get incoming token data | decode incoming token data
  - get token from storage
  - get client data ( from token, data, or header ) | create if should create
  - get user if should have user ( token should have [login OR general] audience )
  - reconcile, check required items if exist and throw error otherwise